{{define "ElemTempl"}}{{if eq (.Type) 1 }}{{/*Ptr*/}}{{template "PtrTempl" .Ptr}}{{else if eq (.Type) 2 }}{{/*Slice*/}}{{template "SliceTempl" .Slice}}{{else if eq (.Type) 3 }}{{/*Struct*/}}{{template "StructTempl" .Struct}}{{else if eq (.Type) 4 }}{{/*Base*/}}{{template "BaseTempl" .Base}}{{else if eq (.Type) 5 }}{{/* Map */}}{{template "MapTempl" .Map}}{{else if eq (.Type) 6 }}{{/* Array */}}{{template "ArrayTempl" .Array}}{{end}}{{end}}

{{define "PtrTempl"}}
	if {{.Varname}} == nil {
		s += msgp.NilSize
	} else {
		{{template "ElemTempl" .Value}}
	}
{{end}}

{{define "SliceTempl"}}
	s += msgp.ArrayHeaderSize
	for {{.Index}} := range {{.Varname}} {
		_ = {{.Index}}
		{{template "ElemTempl" .Els}}
	}
{{end}}

{{define "MapTempl"}}
	s += msgp.MapHeaderSize
	if {{.Varname}} != nil {
		for {{.Keyidx}}, {{.Validx}} := range {{.Varname}} {
			_ = {{.Validx}}
			s += msgp.StringPrefixSize + len({{.Keyidx}})
			{{template "ElemTempl" .Value}}
		}
	}
{{end}}

{{define "ArrayTempl"}}
	s += msgp.ArrayHeaderSize
	for {{.Index}} := range {{.Varname}} {
		_ = {{.Index}}
		{{template "ElemTempl" .Els}}
	}
{{end}}

{{define "StructTempl"}}
	s += msgp.MapHeaderSize
	{{range .Fields}}s += msgp.StringPrefixSize + {{len .FieldTag}}
	{{template "ElemTempl" .FieldElem}}{{end}}
{{end}}

{{define "BaseTempl"}}
{{if .IsIntf}}s += msgp.GuessSize({{.Varname}})
{{else if .IsIdent}}s += {{.Varname}}.Msgsize()
{{else if (or (eq .Value 1) (eq .Value 2))}}{{/* string or []byte */}}
{{if .Convert}}
s += msgp.{{.BaseName}}PrefixSize + len({{.ToBase}}({{.Varname}}))
{{else}}
s += msgp.{{.BaseName}}PrefixSize + len({{.Varname}})
{{end}}
{{else if .IsExt}}s += msgp.ExtensionSize({{.Varname}})
{{else}}s += msgp.{{.BaseName}}Size{{end}}
{{end}}